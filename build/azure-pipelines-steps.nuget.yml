parameters:
  NuGetVersion: ''
  ToolPath: $(Build.BinariesDirectory)
  BuildConfiguration: 'Release'
  outputDirectory: ''
  projects: []
  deploy: false


steps:
#- task: UseDotNet@2
#  displayName: 'Use .NET Core sdk'
#  inputs:
#    packageType: sdk
#    version: 3.1.x
#    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: DotNetCoreCLI@2
  displayName: Install NBGV tool
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . nbgv

- script: nbgv cloud
  displayName: Set Version

- powershell: |
    $versionInformation = .\nbgv get-version -f json | ConvertFrom-Json
    Write-Host ##vso[task.setvariable variable=versionNumber;]$versionInformation.Version
    Write-Host ##vso[task.setvariable variable=versionNumberNuGet;]$versionInformation.NuGetPackageVersion

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '-c Release /p:Version:$(versionNumber)'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: '**/*Tests.csproj'
    arguments: '--no-build -c Release'

- script: dotnet pack ./src/Papst.EventStore.Abstractions/Papst.EventStore.Abstractions.csproj -c Release --no-build -o $(Build.ArtifactStagingDirectory)
  displayName: 'Pack Nuget Package: Papst.EventStore.Abstractions'
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq('true', variables['FORCE_PUSH_NUGET'])))

- task: NugetCommand@2
  displayName: 'Push Nuget Package: Papst.EventStore.Abstractions'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/Papst.EventStore.Abstractions*.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'NuGet Papst'
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq('true', variables['FORCE_PUSH_NUGET'])))

- script: dotnet pack ./src/Papst.EventStore.CosmosDb/Papst.EventStore.CosmosDb.csproj -c Release --no-build -o $(Build.ArtifactStagingDirectory)
  displayName: 'Pack Nuget Package: Papst.EventStore.CosmosDb'
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq('true', variables['FORCE_PUSH_NUGET'])))

- task: NugetCommand@2
  displayName: 'Push Nuget Package: Papst.EventStore.CosmosDb'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/Papst.EventStore.CosmosDb*.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'NuGet Papst'
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq('true', variables['FORCE_PUSH_NUGET'])))

- task: PublishSymbols@2
  displayName: 'Publish symbols path'
  inputs:
    SymbolServerType: TeamServices
    TreatNotIndexedAsWarning: true
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq('true', variables['FORCE_PUSH_NUGET'])))
